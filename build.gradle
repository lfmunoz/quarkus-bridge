buildscript {

}


plugins {
    id 'org.jetbrains.kotlin.jvm' version "1.3.61"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.61"
    id 'io.quarkus'
}




repositories {
     mavenLocal()
     mavenCentral()
    maven {
        name "eco-nexus"
        if (project.version.endsWith('-SNAPSHOT')) {
            url "https://nexus.arriseco.com/content/repositories/snapshots"
        } else {
            url "https://nexus.arriseco.com/content/repositories/releases"
        }
    }
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")

    // MISC
//    implementation("pace.eco:model:1.47")
//    implementation("eco:shared-amqp:1.12")
    implementation("com.google.guava:guava:19.0")
    implementation("org.fissore:slf4j-fluent:0.12.0")
    implementation("ch.qos.logback:logback-core:1.2.3")
    implementation("ch.qos.logback:logback-classic:1.2.3")

    // AMPQ
    implementation ("com.rabbitmq:amqp-client:5.7.3")

    // VERTX
    implementation ("io.vertx:vertx-rabbitmq-client:3.8.4")
    implementation("io.vertx:vertx-lang-kotlin:3.8.4")
    implementation ("io.vertx:vertx-lang-kotlin-coroutines:3.8.4")
//    implementation "io.vertx:vertx-rx-java2:3.8.4"

    // QUARKUS
    implementation "io.quarkus:quarkus-kotlin"
    implementation "io.quarkus:quarkus-vertx"
//    implementation 'io.quarkus:quarkus-jackson'
    implementation "io.quarkus:quarkus-resteasy"
    implementation("io.quarkus:quarkus-resteasy-jackson")
    implementation("io.quarkus:quarkus-kafka-client:$quarkusPlatformVersion")
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging'

    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.2'


    // KOTLIN
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"

    // TEST
    testImplementation("org.assertj:assertj-core")
    testImplementation "io.quarkus:quarkus-junit5"
    testImplementation "io.rest-assured:rest-assured"
}

group 'eco'
version '1.0.0'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


//test {
//    systemProperty "quarkus.test.profile", "foo"
//}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

